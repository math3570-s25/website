{
  "hash": "52fdf89074a5677469b189ee0d72e296",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Posit Cloud ‚òÅÔ∏è\"\nsubtitle: \"MATH/COSC 3570 Introduction to Data Science\"\nauthor: \"Dr. Cheng-Han Yu <br> Department of Mathematical and Statistical Sciences <br> Marquette University\"\nformat: \n  revealjs:\n    html-math-method:\n      method: mathjax\n      url: \"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\"\n    # include-in-header:\n    #     - \"macros.tex\"\n    highlight-style: github\n    code-block-bg: true\n    self-contained: false\n    slide-number: c/t\n    incremental: false\n    width: 1800\n    height: 1000\n    margin: 0.05\n    logo: \"https://upload.wikimedia.org/wikipedia/commons/e/e8/Marquette_Golden_Eagles_logo.svg\"\n    footer: \"[math3570-s25.github.io/website](https://math3570-s25.github.io/website/)\"\n    theme: [\"simple\", \"slides.scss\"]\n    echo: false\n    multiplex: true\n    code-link: true\n    fig-cap-location: bottom\n    fig-align: center\n    transition: none ## fade slide convex concave zoom\n    code-line-numbers: false\n    title-slide-attributes:\n      data-background-color: \"#447099\"\neditor: source\nexecute:\n  freeze: true\n---\n\n#  {visibility=\"hidden\"}\n\n\\def\\bx{\\mathbf{x}}\n\\def\\bg{\\mathbf{g}}\n\\def\\bw{\\mathbf{w}}\n\\def\\bbeta{\\boldsymbol \\beta}\n\\def\\bX{\\mathbf{X}}\n\\def\\by{\\mathbf{y}}\n\\def\\bH{\\mathbf{H}}\n\\def\\bI{\\mathbf{I}}\n\\def\\bS{\\mathbf{S}}\n\\def\\bW{\\mathbf{W}}\n\\def\\T{\\text{T}}\n\\def\\cov{\\mathrm{Cov}}\n\\def\\cor{\\mathrm{Corr}}\n\\def\\var{\\mathrm{Var}}\n\\def\\E{\\mathrm{E}}\n\\def\\bmu{\\boldsymbol \\mu}\n\\DeclareMathOperator*{\\argmin}{arg\\,min}\n\\def\\Trace{\\text{Trace}}\n\n\n\n# **Let's get equipped with data science tools!**\n\n::: notes\n-   All right. Let's set up our computing environment, so we can start coding, and doing data science.\n-   The set-up is important. It ensures that you can do what you need to do, including your homework and projects.\n-   And I would like to make sure everyone is on the same page. OK\n:::\n\n## Integrated Development Environment\n\n:::::: columns\n::: {.column width=\"40%\"}\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](images/03-posit/posit.png){fig-align='center' width=60%}\n:::\n:::\n:::\n\n::: {.column width=\"30%\"}\n<br>\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](images/03-posit/rstudio-logo.png){fig-align='center' width=100%}\n:::\n:::\n:::\n\n::: {.column width=\"30%\"}\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](https://upload.wikimedia.org/wikipedia/commons/3/38/Jupyter_logo.svg){fig-align='center' width=50%}\n:::\n:::\n:::\n::::::\n\n-   R and Python are programming languages.\n\n-   [Posit Cloud](https://posit.cloud/) offers two integrated development environments (IDE):\n\n    -   [RStudio](https://posit.co/products/open-source/rstudio/)\n    -   [JupyterLab/Jupyter Notebook](https://jupyter.org/)\n\nwhich are software for efficiently writing computer programs.\n\n::: notes\n-   We'll use Posit Cloud to write R and Python code.\n-   The first tool we need is Posit Cloud which is a cloud service provided by the company Posit. <!-- - With packages, we can do lots of things without writing our own code, and we can just use the functions provided in packages to do our job. It saves us lots of time. --> <!-- - A language with many great add-on packages can become a very useful language. --> <!-- - packages: which is a collection of functions and data for people to use. -->\n-   R is not a general-purpose programming language like python or java, but it is specifically for data science. And that's probably why you don't learn R in an intro programming course.\n-   So you can view Python as a smart phone. It can do many different things, phone, camera, email, social media. But R is like a high quality camera. You cannot use it to write emails, text messages, but it produces high quality photos.\n-   RStudio is not a programming language, but a software application.\n-   Code itself is just a text file. You can use any text editor or software to write your code.\n-   So RStudio makes programming in R more easily and efficiently. It provides so many useful functions for you that doing data science becomes a piece of cake.\n-   Today, You are gonna have a chance to play with different panes and functions in RStudio. OK.\n:::\n\n## ‚òÅÔ∏è Posit Cloud - Data Science w/o hardware hassles\n\n-   üòé Implement R/Python programs *without* needing to install R/Python and the IDE in your laptop!\n\n-   üòé [**Posit Cloud**](https://rstudio.cloud/) lets you do, share and learn data science **entirely online**!\n\n:::::: columns\n::: {.column width=\"50%\"}\n### üòû Get everything ready locally: Lots of friction\n\n-   Download and install R/Python\n-   Download and install IDE\n-   Install wanted R/Python packages:\n    -   tidymodels\n    -   tidyverse\n    -   NumPy\n    -   ...\n-   Download and install tools like Git\n:::\n\n:::: {.column width=\"50%\"}\n::: fragment\n### ü§ì Posit Cloud: Much less friction\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](images/03-posit/cloud.png){fig-align='center' width=40%}\n:::\n:::\n\n-   Go to <https://posit.cloud/>\n\n-   Log in\n\n    `> hello world!`\n:::\n::::\n::::::\n\n::: notes\n-   Why I choose posit cloud for you to code in R? Well if I want every one of you use R/Python and RStudio locally in your computer, you have to (\\_\\_\\_\\_\\_). And we need some magic to make sure everyone gets the coding environment ready.\n-   Instead, with the Cloud-based solution, you just need to login, then you start writing code right away.\n-   Posit Cloud provides you with the latest version of R and RStudio. No installation is required.\n-   Doesn't mean you should always use Posit Cloud version. It's not free if you need more resources.\n-   If later you program a lot, you should absolutely install them locally into your laptop.\n:::\n\n## Install Posit Cloud\n\n::: lab\n-   *Step 1*: In the Posit website <https://posit.co/>, choose **Products \\> Posit Cloud** as shown below.\n:::\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](images/03-posit/posit-cloud-s25.png){fig-align='center' width=50%}\n:::\n:::\n\n## Install Posit Cloud\n\n::: lab\n*Step 2*: Click **GET STARTED**.\n\n*Step 3*: [**Cloud Student**]{.red} **\\> Sign Up** using your Marquette email address.\n:::\n\n::::: columns\n::: {.column width=\"30%\"}\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](images/03-posit/landing-1-posit.png){fig-align='center' width=100%}\n:::\n:::\n:::\n\n::: {.column width=\"70%\"}\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](images/03-posit/posit-student-plan-s25.png){fig-align='center' width=100%}\n:::\n:::\n:::\n:::::\n\n::: notes\nfile:///Users/chenghanyu/Dropbox/academia/books/r/teach-r-online-master/01-cloud/01-cloud.html#37\n:::\n\n## New Projects\n\n::::: columns\n::: {.column width=\"85%\"}\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](images/03-posit/new-project-cloud-posit.png){fig-align='center' width=100%}\n:::\n:::\n:::\n\n::: {.column width=\"15%\"}\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](images/03-posit/new-project-option-24.png){fig-align='center' width=51}\n:::\n:::\n:::\n:::::\n\n-   We will talk about Git/GitHub shortly.\n\n## Workspaces\n\n-   When you create an account on Posit Cloud you get a **workspace** of your own.\n-   You can add a new workspace (click **+ New Space** in sidebar) and control its permissions.\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](images/03-posit/posit-cloud-hide-sidebar.png){fig-align='center' width=100%}\n:::\n:::\n\n## Welcome to 3570 Data Science!\n\n::: lab\n-   I'm sending you a link via email for joining the course workspace **2025-spring-math-3570**. Please join.\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](images/03-posit/join-space.png){fig-align='center' width=70%}\n:::\n:::\n:::\n\n::: notes\nGo to D2l to send Posit Cloud invitation\n\nSubject Posit Cloud Invitation Message https://posit.cloud/spaces/459948/join?access_code=JY6N0CSQWE5qa7QFYxYKqWT9awi6wP2JqV3UNfj6\n\nBest, Dr. Yu\n:::\n\n## \n\n::: lab\n<br>\n\n-   In the bar, click workspace **2025-spring-math-3570**.\n\n-   [In the workspace]{.red}, click **New Project \\> New RStudio Project** to get into the IDE.\n\n-   In *Untitled Project*, name your project as **3570-project**.\n\n-   In the Console pane, write R code: a string **`\"Hello WoRld!\"`** or math **`2 + 4`**.\n\n-   **Tools \\> Global Options \\> Appearance** to select your favorite editor theme.\n:::\n\n## \n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](images/03-posit/rcloud_project.png){fig-align='center' width=100%}\n:::\n:::\n\n## More Tips\n\n-   Read the [Posit Cloud Documentation](https://docs.posit.co/cloud/)\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](images/03-posit/posit-cloud-doc.png){fig-align='center' width=70%}\n:::\n:::\n\n# Working in Posit Cloud {background-color=\"#447099\"}\n\n## Panes\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](images/03-posit/rstudio_panes.png){fig-align='center' width=85%}\n:::\n:::\n\n::: notes\n-   In RStudio, there are 4 main panes, source pane, console pane, pane for environment/history and version control, and the pane for files plots packages and help page.\n-   Source pane is where you write your code. Your code will not be evaluated or interpreted until you \"run\" them or source them to the console.\n-   Try to write your code in R/Python scripts in the Source, so that the code can be saved and reused later.\n-   You type code into the Console if the code is short or you want to do some quick calculations or analysis. The code you type in the Console will not be saved in a script.\n-   In the environment/history, you can check any objects you create in the R/Python environment and you can also view your command history in the history tab.\n-   And you will see how the pane for file/plot/package/help can be used as we learn more about RStudio.\n:::\n\n## R Script\n\n-   A R script is a **.R** file that contains R code.\n\n-   To create a R script, go to **File \\> New \\> R Script**, or click the green-plus icon on the topleft corner, and select R Script.\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](images/03-posit/script.png){fig-align='center' width=85%}\n:::\n:::\n\n::: notes\n-   Here you see in this r script, I create two objects x and y, and I also load the data called mtcars into R environment.\n-   Don't worry if you don't know these syntax. I will teach you basic R syntax and programming next week.\n:::\n\n## Run Code\n\n-   [ **Run** ]{style=\"color:blue\"}: run the **current line** or **selection of code**.\n    -   `ctrl + enter` (Win) or `cmd + enter` (Mac)\n-   [ **Icon right to the Run** ]{style=\"color:blue\"}: re-run the **previous** code.\n    -   `alt + ctrl + p` (Win) or `option + cmd + p` (Mac)\n-   [ **Source** ]{style=\"color:blue\"}: run **all** the code in the R script.\n    -   `shift + ctrl + s` (Win) or `shift + cmd + s` (Mac)\n-   [ **Source with Echo** ]{style=\"color:blue\"}: run **all** the code in the R script *with the code printed in the console*.\n    -   `shift + ctrl + enter` (Win) or `shift + cmd + enter` (Mac)\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](images/03-posit/script.png){fig-align='center' width=100%}\n:::\n:::\n\n::: notes\n-   [ **Source** ]{style=\"color:blue\"}: run **all** the code in the R script with **NO** output\n-   [ **Source with Echo** ]{style=\"color:blue\"}: run **all** the code in the R script *and show output*\n-   Depending on your purpose, you can run code line by line or run the entire code.\n-   To run the R code line by line, Click Run icon to run the current line or selection of code. Or use key-binding `ctrl + enter` (windows) or `cmd + enter` (mac)\n:::\n\n## Environment Tab\n\n-   The (global) environment is where we are currently working.\n\n-   Anything created or imported into the current R/Python session is stored in the environment and shown in the **Environment** tab.\n\n-   After we run the R script, objects stored in the environment are\n\n    -   Data set `mtcars`\n    -   Object `x` storing integer values 1 to 10.\n    -   Object `y` storing three numeric values 3, 5, 9.\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](images/03-posit/environment.png){fig-align='center' width=70%}\n:::\n:::\n\n::: notes\n-   Anything created or imported into the current R session is stored in our environment and shown in the **Environment** tab.\n-   We'll talk about the R data type in detail later.\n:::\n\n## Python Script\n\n-   A Python script is a **.py** file that contains Python code.\n\n-   To create a Python script, go to **File \\> New \\> Python Script**, or click the green-plus icon on the topleft corner, and select Python Script.\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](images/03-posit/script-py.png){fig-align='center' width=85%}\n:::\n:::\n\n## Run Python Code\n\n-   Running Python code may need to update some packages. Please say *YES!*\n\n-   When you run the Python code in the R console, or type `reticulate::repl_python()`, the console will switch from R to Python.\n\n-   In the Python console `>>> quit` to switch back to the R console.\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](images/03-posit/run-py-pkg.png){fig-align='center' width=10in height=4.5in}\n:::\n:::\n\n::: notes\nREPL = Read, Evaluate, Print, and Loop\n\nor type `reticulate::repl_python()`\n:::\n\n## Environment Tab\n\n-   After we run the Python script, the object stored in the environment is\n    -   Object `b` storing a string `Hello World!`\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](images/03-posit/environment-py.png){fig-align='center' width=80%}\n:::\n:::\n\n::: notes\n-   Anything created or imported into the current R session is stored in our environment and shown in the **Environment** tab.\n-   We'll talk about the R data type in detail later.\n:::\n\n## History Tab\n\n-   The **History** tab keeps a record of all previous commands.\n    -   [**save icon**]{style=\"color:blue\"}: save all history to a file\n    -   [**To Console**]{style=\"color:blue\"}: send the selected commands to the console.\n    -   [**To Source** ]{style=\"color:blue\"}: inserted the selected commands into the current script.\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](images/03-posit/history.png){fig-align='center' width=40%}\n:::\n:::\n\n## History Tab\n\n-   The **History** tab keeps a record of all previous commands.\n    -   [**save icon**]{style=\"color:blue\"}: save all history to a file\n    -   [**To Console**]{style=\"color:blue\"}: send the selected commands to the console.\n    -   [**To Source** ]{style=\"color:blue\"}: inserted the selected commands into the current script.\n\n::: tip\nIn the console pane, use ‚¨ÜÔ∏è to show the previous commands.\n:::\n\n## R Packages üì¶\n\n-   When we start a R session, only built-in packages like **base**, **stats**, **graphics**, etc are available.\n-   Installing packages is an easy way to get access to others data and functions.\n\n. . .\n\n![](https://raw.githubusercontent.com/rstudio/hex-stickers/master/PNG/readr.png){width=\"150\"}![](https://raw.githubusercontent.com/rstudio/hex-stickers/master/PNG/readxl.png){width=\"150\"}![](https://raw.githubusercontent.com/rstudio/hex-stickers/master/PNG/haven.png){width=\"150\"}![](https://raw.githubusercontent.com/rstudio/hex-stickers/main/PNG/tidyverse.png){width=\"150\"}![](https://raw.githubusercontent.com/rstudio/hex-stickers/master/thumbs/tidyr.png){width=\"150\"}![](https://raw.githubusercontent.com/rstudio/hex-stickers/master/PNG/dplyr.png){width=\"150\"}![](https://raw.githubusercontent.com/rstudio/hex-stickers/master/PNG/sparklyr.png){width=\"150\"}![](https://raw.githubusercontent.com/rstudio/hex-stickers/master/PNG/ggplot2.png){width=\"150\"}![](https://raw.githubusercontent.com/slowkow/ggrepel/master/man/figures/logo.svg){width=\"150\"}![](https://raw.githubusercontent.com/thomasp85/gganimate/master/man/figures/logo.png){width=\"150\"}![](https://raw.githubusercontent.com/sjmgarnier/viridis/master/hex_logo/viridis.svg){width=\"150\"}![](https://raw.githubusercontent.com/rstudio/hex-stickers/master/PNG/tibble.png){width=\"150\"}![](https://raw.githubusercontent.com/rstudio/hex-stickers/main/PNG/gt.png){width=\"150\"}![](https://raw.githubusercontent.com/rstudio/hex-stickers/master/PNG/purrr.png){width=\"150\"}![](https://raw.githubusercontent.com/rstudio/hex-stickers/master/thumbs/lubridate.png){width=\"150\"}![](https://raw.githubusercontent.com/rstudio/hex-stickers/master/thumbs/stringr.png){width=\"150\"}![](https://raw.githubusercontent.com/rstudio/hex-stickers/master/thumbs/rvest.png){width=\"150\"}![](https://raw.githubusercontent.com/rstudio/hex-stickers/master/thumbs/rmarkdown.png){width=\"150\"}![](https://raw.githubusercontent.com/rstudio/hex-stickers/master/thumbs/knitr.png){width=\"150\"}![](https://raw.githubusercontent.com/rstudio/hex-stickers/main/PNG/quarto.png){width=\"150\"}![](https://raw.githubusercontent.com/rstudio/hex-stickers/master/thumbs/shiny.png){width=\"150\"}![](https://raw.githubusercontent.com/rstudio/hex-stickers/main/PNG/devtools.png){width=\"150\"}![](https://raw.githubusercontent.com/rstudio/hex-stickers/main/PNG/flexdashboard.png){width=\"150\"}![](https://raw.githubusercontent.com/rstudio/hex-stickers/master/thumbs/reticulate.png){width=\"150\"}![](https://raw.githubusercontent.com/rstudio/hex-stickers/master/thumbs/broom.png){width=\"150\"}![](https://raw.githubusercontent.com/rstudio/hex-stickers/master/thumbs/tidymodels.png){width=\"150\"}![](https://raw.githubusercontent.com/rstudio/hex-stickers/master/thumbs/tidyposterior.png){width=\"150\"}![](https://raw.githubusercontent.com/rstudio/hex-stickers/master/thumbs/tidypredict.png){width=\"150\"} and [more](https://github.com/rstudio/hex-stickers)!\n\n::: notes\n-   A language with many great add-on packages can become a very useful language.\n-   packages: which is a collection of functions and data for people to use.\n:::\n\n#  {background-color=\"#447099\" background-image=\"images/03-posit/hex_laptop.jpeg\" background-size=\"cover\"}\n\n<!-- ::: {style=\"vertical-align: text-bottom;\"} -->\n\n<!-- **ohi-science.org/news/takeaways-from-rstudioconf** -->\n\n<!-- ::: -->\n\n<!-- ::: {.bottom} -->\n\n<!-- **ohi-science.org/news/takeaways-from-rstudioconf** -->\n\n<!-- ::: -->\n\n## Installing R Packages üì¶\n\n::::: columns\n::: {.column width=\"50%\"}\n-   To install a package, for example, the [**ggplot2**](https://ggplot2.tidyverse.org/) package, we use the command\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ninstall.packages(\"ggplot2\")\n```\n:::\n\n<!-- # ```{r package, echo=5, eval=FALSE} -->\n\n<!-- # #| label: package -->\n\n<!-- # #| echo: false -->\n\n<!-- # # install.packages(\"car\", repos = \"http://cran.us.r-project.org\") -->\n\n<!-- # r = getOption(\"repos\") -->\n\n<!-- # r[\"CRAN\"] = \"http://cran.us.r-project.org\" -->\n\n<!-- # options(repos = r) -->\n\n<!-- # install.packages(\"ggplot2\") -->\n\n<!-- # # install.packages(\"car\") -->\n\n<!-- # ``` -->\n\n-   In the right-bottom pane, **Packages \\> Install**\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](./images/03-posit/pkg_install.png){fig-align='center' width=100%}\n:::\n:::\n:::\n\n::: {.column width=\"50%\"}\n<p align=\"center\">\n\n<img src=\"https://raw.githubusercontent.com/rstudio/hex-stickers/master/PNG/ggplot2.png\" style=\"width:660px;\"/>\n\n</p>\n:::\n:::::\n\n## Loading R Packages üì¶\n\n:::::::: columns\n::::: {.column width=\"50%\"}\n::: question\nWhat happened when you run\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(mpg, aes(x = displ, \n                y = hwy, \n                colour = class)) + \n    geom_point()\n```\n:::\n:::\n\n::: fragment\n-   To use any function or data in **ggplot2**, we write `ggplot2::` followed by the name of the function or data.\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot2::ggplot(ggplot2::mpg, \n                ggplot2::aes(\n                    x = displ, \n                    y = hwy, \n                    colour = class)\n                ) + \n    ggplot2::geom_point()\n```\n:::\n:::\n:::::\n\n:::: {.column width=\"50%\"}\n::: fragment\n-   We can load the package into our R session using `library()`.\n-   **With library(ggplot2)**, R knows the function and data are from the **ggplot2** package.\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nggplot(mpg, aes(x = displ, \n                y = hwy, \n                colour = class)) + \n    geom_point()\n```\n:::\n:::\n::::\n::::::::\n\n## Help\n\n-   Don't know how a function works or what a data set is about ‚ùì\n-   üëâ Simply type `?` followed by the data name or function name like\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n?mean\n?mpg\n```\n:::\n\n. . .\n\n::: question\nWhat does the function `mean()` do? What is the size of `mpg`?\n:::\n\n. . .\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](images/03-posit/mpg_help.png){fig-align='center' width=50%}\n:::\n:::\n\n::: notes\nA document will show up in the Help tab, teaching you how to use the function or explaining the data set.\n:::\n\n## \n\n::: lab\n[ **01-Running R Script** ]{style=\"color:blue\"}\n\n-   Load R package **ggplot2** into your Posit Cloud.\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n## install the package if you haven't!\n________(ggplot2)\n```\n:::\n\n-   Create a R script named **lab01-run-script.R** in your **3570-project**.\n\n-   Copy and paste the code below into the script, and save it.\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nbar <- ggplot(data = diamonds) + \n    geom_bar(mapping = aes(x = cut, fill = cut), \n             show.legend = FALSE, width = 1) + \n    theme(aspect.ratio = 1) +\n    labs(x = NULL, y = NULL)\nbar + coord_flip()\nbar + coord_polar()\n```\n:::\n\n-   Source the script. A pretty plot showing up?! <!-- - Change `4` to `12` and `3` to `20`. Hit Run line by line. What happened? --> <!-- - Use `?mpg` to see what `displ` and `hwy` mean, and use `?ggplot` and `?geom_point` to see more on creating a ggplot. -->\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}