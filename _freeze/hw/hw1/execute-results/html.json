{
  "hash": "d48c7feb78ac1181ce0f4b2d18f9ab5e",
  "result": {
    "markdown": "---\ntitle: \"Homework 1: Quarto, Basic Syntax and Data Importing\"\nsubtitle: \"Spring 2024 MATH/COSC 3570 Introduction to Data Science by Dr. Cheng-Han Yu\"\nformat: \n  html:\n    code-fold: false\n    code-tools: true\n    toc: true\n    toc-depth: 3\ndate: today\nauthor: \"**Insert Your Name!!**\"\nnumber-sections: true\neditor: \n  source\n---\n\n\n\n\n## Autobiography\n\n(@) Please introduce yourself. You can share anything, your hometown, major, family, hobbies, working experience, honors and awards, special skills, etc, yes anything! Your autobiography should include:\n\n    -   At least two paragraphs (Paragraphs are separated by a blank line)\n    -   Bold text\n    -   Italic text\n    -   Text with both **bold AND italic** font (Not mentioned in class, but you should be able to figure it out)\n    -   Clickable text with a hyperlink\n    -   Blockquote\n    -   Listed items\n    -   emoji (Add emoji to your writing by typing `:EMOJICODE:`, check [emoji cheatsheet](https://github.com/ikatyang/emoji-cheat-sheet/blob/master/README.md))\n\n\n    **Your Self-Introduction:**\n\n\n\n\n\n\n\n## Chunk Options\n\nPlease check the references <https://quarto.org/docs/reference/cells/cells-knitr.html> or <https://yihui.org/knitr/options/> and answer the following questions.\n\n(@)  Please add your nice picture using `knitr::include_graphics()`. Please use\n    i) `echo` to not to show the code\n    \n    ii) `fig-cap` to add a figure caption\n    \n    iii) `fig-cap-location` to put the caption on the margin.\n\n\n::: {.cell}\n\n:::\n\n\n(@)  Use the chunk option \n    i) `echo` to **NOT** to show `library(tidyverse)`, `library(ggplot2)`, and `library(ggrepel)`. *Note: you may need to use !expr. Check <https://stackoverflow.com/questions/72217651/quarto-rmarkdown-code-block-to-only-display-certain-lines> and <https://quarto.org/docs/computations/r.html#chunk-options>*\n    \n    ii) `fig-align` to have the figure right-aligned. \n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    library(tidyverse)\n    library(ggplot2)\n    class_avg <- mpg |> \n        group_by(class) |> \n        summarise(displ = median(displ), hwy = median(hwy))\n    library(ggrepel)\n    ggplot(mpg, aes(displ, hwy, colour = class)) + \n        geom_label_repel(aes(label = class), data = class_avg, size = 6, \n                         label.size = 0, segment.color = NA) + \n        geom_point() + theme(legend.position = \"none\")\n    ```\n    \n    ::: {.cell-output-display}\n    ![](hw1_files/figure-html/opt-echo-1.png){width=672}\n    :::\n    :::\n\n\n\n(@)  A Marquette student has a really bad code style. Please \n    i) Add the chunk option `tidy` in the chunk labelled `style` to make her code below more readable. \n    \n    ii) Add another option `eval` so that the code is **NOT** run.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfor(k in 1:10){j=cos(sin(k)*k^2)+3;l=exp(k-7*log(k,base=2));print(j*l-5)}\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 4.966218\n[1] -4.985713\n[1] -4.998994\n[1] -4.999823\n[1] -4.999956\n[1] -4.999988\n[1] -4.999988\n[1] -4.999991\n[1] -4.999995\n[1] -4.999996\n```\n:::\n:::\n\n\n(@)  Use the chunk option `results` in the chunk labelled `cat`, so that the text output is \"I love **Marquette** and *Data Science*!\".\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncat(\"I love **Marquette** and *Data Science*!\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nI love **Marquette** and *Data Science*!\n```\n:::\n:::\n\n\n(@)  We can re-use a code chunk by using its name! Please create a code chunk and use the option `#| label: photo` to run the code in the code chunk named `photo`. Note that the chunk options are not carried.\n\n\n::: {.cell}\n\n:::\n\n\n## Basic R\n\n### Vector\n\nUse the built-in data set `LakeHuron`.\n\n(@)  Find the number of data values in `LakeHuron`.\n\n\n::: {.cell}\n\n:::\n\n\n(@)  What is the highest and lowest level (in feet) of LakeHuron during the 1875-1972 period?\n\n\n::: {.cell}\n\n:::\n\n\n(@)  Return a logical vector that shows whether the lake level is higher than the average level or not.\n\n\n::: {.cell}\n\n:::\n\n\n(@)  Return years that have higher level than the average.\n\n\n::: {.cell}\n\n:::\n\n\n### Data Frame\n\n(@)  Make the `mtcars` dataset as a tibble using `as_tibble()`. Call it `tbl`.\n\n\n::: {.cell}\n\n:::\n\n\n(@)  Print the sub data of `tbl` that contains the 11th to 15th rows and the last three columns.\n\n\n::: {.cell}\n\n:::\n\n\n(@)  Grab the second and the third columns of `tbl` using *list* method and their *name*. (Do **NOT** use matrix method, and their index)\n\n\n::: {.cell}\n\n:::\n\n\n(@)  Extract the fourth column of `tbl` as a numerical vector.\n\n\n::: {.cell}\n\n:::\n\n\n(@)  Start with `tbl`, use the pipe operator `|>` to do the followings sequentially.\n\n    i.  extract the first 10 observations (rows)\n    \n    ii. find the column names\n    \n    iii. sort the columns names using `sort()` in a *decreasing* order. (alphabetically from z to a)\n\n\n::: {.cell}\n\n:::\n\n\n### Data Importing\n\n(@)  Read the data `sales.xlsx` from the data folder. Use arguments `sheet`, `skip` and `col_names` so that the output looks like\n\n        # A tibble: 9 x 2\n          id      n    \n          <chr>   <chr>\n        1 Brand 1 n    \n        2 1234    8    \n        3 8721    2    \n        4 1822    3    \n        5 Brand 2 n    \n        6 3333    1    \n        # â€¦ with 3 more rows\n\n\n::: {.cell}\n\n:::\n\n\n(@)  Read in the `favourite-food.xlsx` file from the data folder and call the data `fav_food`. Use the argument `na` to treat \"N/A\" and \"99999\" as a missing value. Print the data out.\n\n\n::: {.cell}\n\n:::\n\n\n## Basic Python\n\n\n::: {.cell}\n\n```{.python .cell-code}\nimport numpy as np\nimport pandas as pd\n```\n:::\n\n\n### Data Frame\n\n(@)  Import the data set `mtcars.csv` using `pd.read_csv()`. Then print the first five rows.\n\n\n::: {.cell}\n\n:::\n\n\n(@)  Use method `.iloc` to obtain the first and fourth rows, and the second and third columns. Name the data `dfcar`.\n\n\n::: {.cell}\n\n:::\n\n\n(@)  Set the row names of `dfcar` to `Mazda` and `Hornet`.\n\n\n::: {.cell}\n\n:::\n\n\n(@)  Use method `.loc` to obtain row `Hornet` and column `disp`.\n\n\n::: {.cell}\n\n:::\n",
    "supporting": [
      "hw1_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}